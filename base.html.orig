<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <title>Visualization Munich</title>
  <script src="https://d3js.org/d3.v4.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
  <script type="text/javascript" src="http://d3js.org/topojson.v1.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/d3-legend/1.8.0/d3-legend.min.js"></script>
  <link rel="stylesheet" type="text/css" href="style.css">
</head>

<body>
  <div id="test"> </div>
  <div id="wrapper">
  <div id="map"> </div>
  <div id="sliderDiv">
      <form>
          <fieldset>
            <legend>Static Legend (per district)</legend>
            Intensity of Color: Percentage of foreigners<br>
            Number of Stickmen: Average children per household<br>
            Placeholder:        Average rent in sqm
          </fieldset>
        </form>
    <label>
      <input type="range" min="1" max="3" value="1" class="slider" id="sliderEle">
    </label>
    <label>
      <input type="checkbox" name="zutat" value="salami">
    Kinder Schwarz
    </label>
    <label>
      <input type="checkbox" name="zutat" value="salami">
         Kinder Gelb
    </label>
  </div>
  <div id="sideRight">
    <b> Here is some flavortext</b>
  </div>
</div>

  <script type="text/javascript">
    $(document).ready(function(){
      var dataset = d3.csv("data/preprocessing/Dataset_01_Grundschueler_sortbyID.csv"); 
      console.log(dataset[0]);

      var width = 800
      var height = 600

      var projection = d3.geoMercator()
        .scale(110000)
        .center([11.61, 48.160]);

      var path = d3.geoPath().projection(projection);

      var svg = d3.select('#map').append('svg')
        .attr("width", width)
        .attr("height", height)
        .append("g");

      var color = d3.scaleLinear().range(["blue", "red"]);
      var showValue= "INDIKATOR_WERT";
      var record=[];

      function addRecord(d){
          d[showValue]=+d[showValue];
          var obj = {key: d.NUMMER, value: d[showValue]};
          record.push(obj);
          console.log(d.NUMMER + ' has var '  + d[showValue]);
          return d;
      }

      d3.csv("data/preprocessing/test.csv", addRecord, function(error,data){
          color.domain(d3.extent(data, function(d){
              return d[showValue];
          }));
      });

      d3.json("munich.geojson", function(error, mapData) {
        console.log(mapData);
        var features = mapData.features;

        svg.selectAll("path")
          .data(features).enter()
          .append("path")
          .attr("class", "district")
          .attr("data-name", function(munich_district) {
            return munich_district.properties.name;
          })
          .attr("data-munich_r_1", function(munich_district) {
            return munich_district.properties.munich_r_1;
          })
          .attr("data-munich_r_2", function(munich_district) {
            return munich_district.properties.munich_r_2;
          })
          .attr("id", function(munich_district) {
            return munich_district.properties.cartodb_id;
          })
          .attr("title", function(munich_district) {
            return munich_district.properties.name;
          })
          .attr("d", path)
<<<<<<< Updated upstream
          .style('fill', getColor)
=======
          .style('fill', colorAll())
>>>>>>> Stashed changes
          .style('stroke', 'black')
          .style('stroke-width', 1)
          .on('mouseover', mouseover)
          .on('mouseout', mouseout)
          .on('click', click, svgClicked);

          function getColor(data){
            var value=-1;
            record.forEach(function(d){
                if(data.NUMMER == d.key){
                    value = d.value;
                    return;
                }
            });
            if(value==-1){
                return "none";
            }
            return color(value);
        }

      });

<<<<<<< Updated upstream
      var returnval;
      function fillDistrict() {
        //var returnval;
        returnval = d3.csv("data/preprocessing/Dataset_01_Grundschueler_sortbyID.csv", function(data) {
          returnval = 'orange';

          console.log("inner returnvalue" + returnval);
        });
      }

=======
      function colorAll() {

        return 'blue';
      }
>>>>>>> Stashed changes
      function mouseover(d){
      // Highlight hovered province
        d3.select(this).style('fill', 'black');
        //$('#4').css('fill', 'black');
        //$('#5').append("<div class='overtext'> test </div>");

        //console.log(this.id);
      }

      function mouseout(d){
      // Highlight hovered province
        d3.select(this).style('fill', 'orange');
      }

      function click(d){
        //console.info(this.dataset.name)
      // Highlight hovered province
        //d3.select(this).style('fill', 'black');
        $('#sideRight').empty();
        $('#sideRight').html(this.id + " " + this.getAttribute('title'));

        var mouse = d3.mouse(this);
        console.log(mouse);
        $('#test').html("<div id='test'>" + this.getAttribute('title') + "</div>");
        //var text =

        //$('body').append(text);
        $('#test').css({'top':mouse[1],'left':mouse[0]}).fadeIn('slow');
      }

      function svgClicked(d){
        console.log('am here');
        var mouseX = e.pageX;
        var mouseY = e.pageY;

      }
    });

//for Time
 $( "#sliderEle" ).on( "change", function( event, ui ) {
   Console.log('u slided');
 } );

 function nameFn(d){
  return d && d.properties ? d.properties.NOMBRE_DPT : null;
}

</script>

<div id="slidecontainer">

</div>
</body>

</html>
